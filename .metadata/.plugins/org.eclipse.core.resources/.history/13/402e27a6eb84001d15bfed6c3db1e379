package com.blog.post.service;

import java.sql.Timestamp;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.transaction.annotation.Transactional;

import com.blog.post.comment.entity.Comment;
import com.blog.post.dao.CommentDAO;
import com.blog.post.entity.Post;

public class CommentServiceImpl implements CommentService {

	
	@Autowired
	private CommentDAO commentDAO;
	
	@Autowired
	private PostService postService;
	
	

	@Override
	@Transactional
	public void deleteComment(int id) {
		
		commentDAO.deleteComment(getComment(id));
	}

	@Override
	@Transactional
	public Comment getComment(int commentId) {
		
		Comment comment = commentDAO.getComment(commentId);
		return comment;
	}

	@Override
	public void saveComment(int postId, Comment comment, int commentId) {
		Timestamp currentDate = new Timestamp(System.currentTimeMillis());
		Post post = postService.getPost(postId);
		System.out.println(post.getId());
		System.out.println(post.getComments());
		if(commentId != 0) {
			Comment existingComment = getComment(commentId);
			existingComment.setName(comment.getName());
			existingComment.setEmail(comment.getEmail());
			existingComment.setComment(comment.getComment());
			existingComment.setUpdated_at(currentDate);
			commentDAO.saveComment(existingComment);
		}
		else {
			if(comment.getCreated_at()==null) {
				
				comment.setCreated_at(currentDate);
			}
			
			comment.setUpdated_at(currentDate);
			
			post.addComment(comment);
			System.out.println(post.getComments());
			commentDAO.saveComment(comment);
		}
		
	}
}
